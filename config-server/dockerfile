# ====== STAGE 1: build ======
FROM maven:3.9.9-amazoncorretto-21 AS builder
WORKDIR /app

# Copia só o pom primeiro para otimizar cache de dependências
COPY pom.xml .
RUN mvn -q -e -DskipTests dependency:go-offline

# Agora copia o código e compila
COPY src ./src
RUN mvn -q -DskipTests package

# ====== STAGE 2: runtime (leve, sem ferramentas de build) ======
FROM eclipse-temurin:21-jre-alpine

# Ajusta timezone (opcional, útil para logs na sua TZ)
ENV TZ=America/Fortaleza
RUN apk add --no-cache tzdata curl && \
    cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Usuário não-root por segurança
RUN addgroup -S app && adduser -S app -G app
USER app

WORKDIR /app

# Copia o JAR do estágio de build
COPY --from=builder /app/target/*.jar /app/app.jar

# Porta padrão do Spring Cloud Config Server
EXPOSE 8888

# Healthcheck simples
HEALTHCHECK --interval=30s --timeout=5s --start-period=20s --retries=3 \
  CMD curl -fsS http://localhost:8888/actuator/health || exit 1

# Flags JVM razoáveis (memória) e ativar Actuator (se não estiver no application.yml)
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Dserver.port=8888"

# Entrada
ENTRYPOINT [ "sh", "-c", "java $JAVA_OPTS -jar /app/app.jar" ]
